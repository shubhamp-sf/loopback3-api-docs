<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Class: loopback</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Class: loopback</h1>

    




<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>loopback<span class="signature">()</span><span class="type-signature"></span></h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    

    
    <h4 class="name" id="loopback"><span class="type-signature"></span>new loopback<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    LoopBack core module. It provides static properties and
methods to create models and data sources. The module itself is a function
that creates loopback `app`. For example:

```js
var loopback = require('loopback');
var app = loopback();
```
</div>













    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>version</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">Version of LoopBack framework.  Static read-only property.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>isBrowser</code></td>
            

            <td class="type">
            
                
<span class="param-type">Boolean</span>


            
            </td>

            

            

            <td class="description last">True if running in a browser environment; false otherwise.  Static read-only property.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>isServer</code></td>
            

            <td class="type">
            
                
<span class="param-type">Boolean</span>


            
            </td>

            

            

            <td class="description last">True if running in a server environment; false otherwise.  Static read-only property.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>registry</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="Registry.html">Registry</a></span>


            
            </td>

            

            

            <td class="description last">The global `Registry` object.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>faviconFile</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">Path to a default favicon shipped with LoopBack.
Use as follows: `app.use(require('serve-favicon')(loopback.faviconFile));`</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line23">line 23</a>
    </li></ul></dd>
    

    

    

    
</dl>




















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".Connector"><span class="type-signature">(static) </span>Connector<span class="type-signature"></span></h4>




<div class="description">
    Connectors
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="index.js.html">index.js</a>, <a href="index.js.html#line18">line 18</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id=".GeoPoint"><span class="type-signature">(static) </span>GeoPoint<span class="type-signature"></span></h4>




<div class="description">
    Types
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="index.js.html">index.js</a>, <a href="index.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id=".configureModel"><span class="type-signature">(static) </span>configureModel<span class="signature">(ModelCtor)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Alter an existing Model class.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>ModelCtor</code></td>
            

            <td class="type">
            
                
<span class="param-type">Model</span>


            
            </td>

            

            

            <td class="description last">The model constructor to alter.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>dataSource</code></td>
            

            <td class="type">
            
                
<span class="param-type">DataSource</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">Attach the model to a dataSource.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>relations</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                
                </td>
            

            

            <td class="description last">Model relations to add/update.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line294">line 294</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id=".createDataSource"><span class="type-signature">(static) </span>createDataSource<span class="signature">(name)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Create a data source with passing the provided options to the connector.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">Optional name.</td>
        </tr>

    
    </tbody>
</table>






    <h5 class="subsection-title">Properties:</h5>

    

<table class="props">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>connector</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            
                <td class="attributes">
                

                
                </td>
            

            

            <td class="description last">LoopBack connector.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>*</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                
                </td>
            

            

            <td class="description last">Other&nbsp;connector properties.
  See the relevant connector documentation.</td>
        </tr>

    
    </tbody>
</table>




<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line346">line 346</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id=".createModel"><span class="type-signature">(static) </span>createModel<span class="signature">(name, properties, options)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Create a named vanilla JavaScript class constructor with an attached
set of properties and options.

This function comes with two variants:
 * `loopback.createModel(name, properties, options)`
 * `loopback.createModel(config)`

In the second variant, the parameters `name`, `properties` and `options`
are provided in the config object. Any additional config entries are
interpreted as `options`, i.e. the following two configs are identical:

```js
{ name: 'Customer', base: 'User' }
{ name: 'Customer', options: { base: 'User' } }
```

**Example**

Create an `Author` model using the three-parameter variant:

```js
loopback.createModel(
  'Author',
  {
    firstName: 'string',
    lastName: 'string'
  },
  {
    relations: {
      books: {
        model: 'Book',
        type: 'hasAndBelongsToMany'
      }
    }
  }
);
```

Create the same model using a config object:

```js
loopback.createModel({
  name: 'Author',
  properties: {
    firstName: 'string',
    lastName: 'string'
  },
  relations: {
    books: {
      model: 'Book',
      type: 'hasAndBelongsToMany'
    }
  }
});
```
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">Unique name.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>properties</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last">(optional)</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line280">line 280</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id=".findModel"><span class="type-signature">(static) </span>findModel<span class="signature">(modelName)</span><span class="type-signature"> &rarr; {Model}</span></h4>
    

    



<div class="description">
    Look up a model class by name from all models created by
`loopback.createModel()`
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>modelName</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">The model name</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line306">line 306</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    The model class
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Model</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id=".getModel"><span class="type-signature">(static) </span>getModel<span class="signature">(modelName)</span><span class="type-signature"> &rarr; {Model}</span></h4>
    

    



<div class="description">
    Look up a model class by name from all models created by
`loopback.createModel()`. Throw an error when no such model exists.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>modelName</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">The model name</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line319">line 319</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    The model class
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Model</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id=".getModelByType"><span class="type-signature">(static) </span>getModelByType<span class="signature">(modelType)</span><span class="type-signature"> &rarr; {Model}</span></h4>
    

    



<div class="description">
    Look up a model class by the base model class.
The method can be used by LoopBack
to find configured models in models.json over the base model.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>modelType</code></td>
            

            <td class="type">
            
                
<span class="param-type">Model</span>


            
            </td>

            

            

            <td class="description last">The base model class</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line332">line 332</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    The subclass if found or the base class
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Model</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id=".memory"><span class="type-signature">(static) </span>memory<span class="signature">(name<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Get an in-memory data source. Use one if it already exists.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>name</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last">The name of the data source.
If not provided, the `'default'` is used.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line357">line 357</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id=".remoteMethod"><span class="type-signature">(static) </span>remoteMethod<span class="signature">(fn, options)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Add a remote method to a model.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>fn</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last">(optional)</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line186">line 186</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id=".template"><span class="type-signature">(static) </span>template<span class="signature">(file)</span><span class="type-signature"> &rarr; {function}</span></h4>
    

    



<div class="description">
    Create a template helper.

    var render = loopback.template('foo.ejs');
    var html = render({foo: 'bar'});
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>file</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last">Path to the template file.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_loopback.js.html">lib/loopback.js</a>, <a href="lib_loopback.js.html#line206">line 206</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">function</span>


    </dd>
</dl>

    





        
    

    

    
</article>

</section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="ACL.html">ACL</a></li><li><a href="AccessContext.html">AccessContext</a></li><li><a href="AccessRequest.html">AccessRequest</a></li><li><a href="AccessToken.html">AccessToken</a></li><li><a href="Application.html">Application</a></li><li><a href="Change.html">Change</a></li><li><a href="Change.Conflict.html">Conflict</a></li><li><a href="Checkpoint.html">Checkpoint</a></li><li><a href="Email.html">Email</a></li><li><a href="KeyValueModel.html">KeyValueModel</a></li><li><a href="LoopBackApplication.html">LoopBackApplication</a></li><li><a href="PersistedModel.html">PersistedModel</a></li><li><a href="Principal.html">Principal</a></li><li><a href="Registry.html">Registry</a></li><li><a href="Role.html">Role</a></li><li><a href="RoleMapping.html">RoleMapping</a></li><li><a href="Scope.html">Scope</a></li><li><a href="User.html">User</a></li><li><a href="global.html#loopback">loopback</a></li><li><a href="module.exports-Model.html">Model</a></li></ul><h3>Global</h3><ul><li><a href="global.html#Connector">Connector</a></li><li><a href="global.html#EventEmitter">EventEmitter</a></li><li><a href="global.html#MailConnector">MailConnector</a></li><li><a href="global.html#Memory">Memory</a></li><li><a href="global.html#concatResults">concatResults</a></li><li><a href="global.html#downloadInChunks">downloadInChunks</a></li><li><a href="global.html#rest">rest</a></li><li><a href="global.html#status">status</a></li><li><a href="global.html#token">token</a></li><li><a href="global.html#uploadInChunks">uploadInChunks</a></li><li><a href="global.html#urlNotFound">urlNotFound</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc/jsdoc">JSDoc 4.0.2</a> on Thu Mar 23 2023 11:48:49 GMT+0530 (India Standard Time)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>